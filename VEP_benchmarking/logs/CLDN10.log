=========================================================================
Log Path: logs/CLDN10.log
Working Directory: C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking
User Name: jchen
R Version: 4.5.1 (2025-06-13 ucrt)
Machine: VENGEANCE x86-64
Operating System: Windows 10 x64 build 26100
Base Packages: stats graphics grDevices utils datasets methods base
Other Packages: logr_1.3.9 common_1.1.3 yaml_2.3.10 stringr_1.5.1
Log Start Time: 2025-08-16 19:49:16.708384
=========================================================================

Parsing variants

NOTE: Log Print Time:  2025-08-16 19:49:16.710478
NOTE: Elapsed Time: 0.00118708610534668 secs

Warning: 2 arguments not used by format 'sample_variants_filtered.csv'

NOTE: Log Print Time:  2025-08-16 19:49:16.806223
NOTE: Elapsed Time: 0.0957448482513428 secs

Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File
'/sample_variants_filtered.csv' does not exist or is non-readable.
getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls:
setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal
Traceback:
12: signal(obj)
11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, 
        "simpleError", "error", "condition"))
10: stopf("File '%s' does not exist or is non-readable. getwd()=='%s'", 
        file, getwd())
9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1)
8: FUN(newX[, i], ...)
7: apply(blocks, 1, function(row) {
       chrom = row[["chr"]]
       block = row[["block"]]
       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)
       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), 
           drop = 1)
       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)
       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, 
           sep = "/"))
       mergedVariants = merge(allVariants, uniqueVariants[Gene == 
           ENSEMBL_ID], by.x = "variant_name", by.y = "#Uploaded_variation")
       return(mergedVariants)
   })
6: eval(exprs[i], envir)
5: eval(exprs[i], envir)
4: sys.source(file, envir = env, keep.source = F)
3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart("muffleMessage"))
2: suppressPackageStartupMessages(sys.source(file, envir = env, 
       keep.source = F))
1: setUpEnvAndRun("Parsing variants", "lib/parseVariants.R")

NOTE: Log Print Time:  2025-08-16 19:49:16.816768
NOTE: Elapsed Time: 0.010545015335083 secs

=========================================================================
Log End Time: 2025-08-16 19:49:16.818124
Log Elapsed Time: 0 00:00:00
=========================================================================
