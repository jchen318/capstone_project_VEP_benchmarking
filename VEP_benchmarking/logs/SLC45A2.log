========================================================================= 
Log Path: logs/SLC45A2.log 
Working Directory: /Users/andrewchen/capstone_project_VEP_benchmarking/VEP_benchmarking 
User Name: andrewchen 
R Version: 4.5.0 (2025-04-11) 
Machine: Andrews-MacBook-Air.local arm64 
Operating System: Darwin 24.6.0 Darwin Kernel Version 24.6.0: Mon Jul 14 11:29:54 PDT 2025; root:xnu-11417.140.69~1/RELEASE_ARM64_T8122 
Base Packages: stats graphics grDevices utils datasets methods base 
Other Packages: logr_1.3.9 common_1.1.3 yaml_2.3.10 stringr_1.5.1 
Log Start Time: 2025-08-17 16:18:39.803146 
========================================================================= 

Warning: cannot create dir '/SLC45A2', reason 'Read-only file system' 

NOTE: Log Print Time:  2025-08-17 16:18:39.804384 
NOTE: Elapsed Time: 0.000813007354736328 secs 

Parsing variants 

NOTE: Log Print Time:  2025-08-17 16:18:39.804923 
NOTE: Elapsed Time: 0.000539064407348633 secs 

Warning: 2 arguments not used by format 'sample_variants_filtered.csv' 

NOTE: Log Print Time:  2025-08-17 16:18:39.859354 
NOTE: Elapsed Time: 0.0544309616088867 secs 

Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='/Users/andrewchen/capstone_project_VEP_benchmarking/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     

NOTE: Log Print Time:  2025-08-17 16:18:39.8662 
NOTE: Elapsed Time: 0.00684595108032227 secs 

========================================================================= 
Log End Time: 2025-08-17 16:18:39.867168 
Log Elapsed Time: 0 00:00:00 
========================================================================= 
