Checking missing libraries
Loading configuration file
==> Process gene GIGYF1 (index = 1) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene PDE3B (index = 2) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene PIEZO1 (index = 3) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene SMAD6 (index = 4) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene ABCG5 (index = 5) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene ANGPTL4 (index = 6) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene BRCA1 (index = 7) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene CD36 (index = 8) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene CEP57 (index = 9) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene CETP (index = 10) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene COL4A4 (index = 11) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene KRT5 (index = 12) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene LIPC (index = 13) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene MLH1 (index = 14) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene NR1H3 (index = 15) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene PALB2 (index = 16) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene PLIN1 (index = 17) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene RRBP1 (index = 18) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene SCARB1 (index = 19) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene SLC45A2 (index = 20) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene ABCA1 (index = 21) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene LCAT (index = 22) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene HBB (index = 23) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene JAK2 (index = 24) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene LPL (index = 25) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene PCSK9 (index = 26) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene ANGPTL3 (index = 27) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene ANGPTL8 (index = 28) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene APOA5 (index = 29) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene APOC3 (index = 30) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene MC1R (index = 31) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene MEPE (index = 32) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene LDLR (index = 33) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene ABCB11 (index = 34) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene ACAD11 (index = 35) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene ADAMTS17 (index = 36) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene ADAMTS6 (index = 37) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene ALDH16A1 (index = 38) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene ALPL (index = 39) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene ANGPTL2 (index = 40) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene APBA1 (index = 41) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene ARID4B (index = 42) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene ASGR1 (index = 43) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene ASXL1 (index = 44) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene BRSK2 (index = 45) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene BSN (index = 46) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene CDC42SE1 (index = 47) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene CHEK2 (index = 48) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene CLDN10 (index = 49) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene CNIH2 (index = 50) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene COL6A1 (index = 51) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene COL6A3 (index = 52) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene CRP (index = 53) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene CST3 (index = 54) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene DIS3L (index = 55) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene DTL (index = 56) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene FAM160A1 (index = 57) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene GCK (index = 58) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene GHSR (index = 59) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene GMPR (index = 60) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene GOLGA8O (index = 61) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene GOT1 (index = 62) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene GP1BA (index = 63) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene GP1BB (index = 64) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene GP9 (index = 65) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene GPLD1 (index = 66) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene GPT (index = 67) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene IL17RA (index = 68) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene IL33 (index = 69) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene IQGAP2 (index = 70) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene IRS1 (index = 71) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene ITGA2B (index = 72) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene KLF1 (index = 73) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene LYPLAL1 (index = 74) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene MLXIPL (index = 75) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene MPL (index = 76) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene MSC (index = 77) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene NF1 (index = 78) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene NPR2 (index = 79) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene NT5C1A (index = 80) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene PAPPA (index = 81) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene PIGK (index = 82) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene PRRC1 (index = 83) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene RAB35 (index = 84) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene RHAG (index = 85) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene SCUBE3 (index = 86) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene SHBG (index = 87) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene SLC22A12 (index = 88) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene SLC2A9 (index = 89) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene STAB1 (index = 90) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene TET2 (index = 91) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene TEX22 (index = 92) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene TMEM150B (index = 93) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene TMPRSS6 (index = 94) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene TUBB1 (index = 95) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene TXNDC16 (index = 96) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene VPS52 (index = 97) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene ZFAT (index = 98) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
==> Process gene ZNF12 (index = 99) 
Checking missing libraries
Loading configuration file
Parsing variants 
Error in fread(paste(INPUT_VARIANTs_DIR, fileName, sep = "/"), drop = 1) : File '/sample_variants_filtered.csv' does not exist or is non-readable. getwd()=='C:/Users/jchen/Desktop/Capstone_project/VEP_benchmarking' Calls: setUpEnvAndRun ... apply -> FUN -> fread -> stopf -> raise_condition -> signal 
Traceback: 
 [1] "12: signal(obj)"                                                                                      
 [2] "11: raise_condition(stop, gettextf(fmt, ..., domain = domain), c(class, "                             
 [3] "        \"simpleError\", \"error\", \"condition\"))"                                                  
 [4] "10: stopf(\"File '%s' does not exist or is non-readable. getwd()=='%s'\", "                           
 [5] "        file, getwd())"                                                                               
 [6] "9: fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), drop = 1)"                                 
 [7] "8: FUN(newX[, i], ...)"                                                                               
 [8] "7: apply(blocks, 1, function(row) {"                                                                  
 [9] "       chrom = row[[\"chr\"]]"                                                                        
[10] "       block = row[[\"block\"]]"                                                                      
[11] "       fileName = sprintf(ALL_VARIANTs_PATH, chrom, block)"                                           
[12] "       allVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, sep = \"/\"), "                        
[13] "           drop = 1)"                                                                                 
[14] "       fileName = sprintf(UNIQUE_VARIANTs_PATH, chrom, block)"                                        
[15] "       uniqueVariants = fread(paste(INPUT_VARIANTs_DIR, fileName, "                                   
[16] "           sep = \"/\"))"                                                                             
[17] "       mergedVariants = merge(allVariants, uniqueVariants[Gene == "                                   
[18] "           ENSEMBL_ID], by.x = \"variant_name\", by.y = \"#Uploaded_variation\")"                     
[19] "       return(mergedVariants)"                                                                        
[20] "   })"                                                                                                
[21] "6: eval(exprs[i], envir)"                                                                             
[22] "5: eval(exprs[i], envir)"                                                                             
[23] "4: sys.source(file, envir = env, keep.source = F)"                                                    
[24] "3: withCallingHandlers(expr, packageStartupMessage = function(c) tryInvokeRestart(\"muffleMessage\"))"
[25] "2: suppressPackageStartupMessages(sys.source(file, envir = env, "                                     
[26] "       keep.source = F))"                                                                             
[27] "1: setUpEnvAndRun(\"Parsing variants\", \"lib/parseVariants.R\")"                                     
 
Collecting benchmark results 
Loading configuration file
Process gene gigyf1 (1/99)...Process gene pde3b (2/99)...Process gene piezo1 (3/99)...Process gene smad6 (4/99)...Process gene abcg5 (5/99)...Process gene angptl4 (6/99)...Process gene brca1 (7/99)...Process gene cd36 (8/99)...Process gene cep57 (9/99)...Process gene cetp (10/99)...Process gene col4a4 (11/99)...Process gene krt5 (12/99)...Process gene lipc (13/99)...Process gene mlh1 (14/99)...Process gene nr1h3 (15/99)...Process gene palb2 (16/99)...Process gene plin1 (17/99)...Process gene rrbp1 (18/99)...Process gene scarb1 (19/99)...Process gene slc45a2 (20/99)...Process gene abca1 (21/99)...Process gene lcat (22/99)...Process gene hbb (23/99)...Process gene jak2 (24/99)...Process gene lpl (25/99)...Process gene pcsk9 (26/99)...Process gene angptl3 (27/99)...Process gene angptl8 (28/99)...Process gene apoa5 (29/99)...Process gene apoc3 (30/99)...Process gene mc1r (31/99)...Process gene mepe (32/99)...Process gene ldlr (33/99)...Process gene abcb11 (34/99)...Process gene acad11 (35/99)...Process gene adamts17 (36/99)...Process gene adamts6 (37/99)...Process gene aldh16a1 (38/99)...Process gene alpl (39/99)...Process gene angptl2 (40/99)...Process gene apba1 (41/99)...Process gene arid4b (42/99)...Process gene asgr1 (43/99)...Process gene asxl1 (44/99)...Process gene brsk2 (45/99)...Process gene bsn (46/99)...Process gene cdc42se1 (47/99)...Process gene chek2 (48/99)...Process gene cldn10 (49/99)...Process gene cnih2 (50/99)...Process gene col6a1 (51/99)...Process gene col6a3 (52/99)...Process gene crp (53/99)...Process gene cst3 (54/99)...Process gene dis3l (55/99)...Process gene dtl (56/99)...Process gene fam160a1 (57/99)...Process gene gck (58/99)...Process gene ghsr (59/99)...Process gene gmpr (60/99)...Process gene golga8o (61/99)...Process gene got1 (62/99)...Process gene gp1ba (63/99)...Process gene gp1bb (64/99)...Process gene gp9 (65/99)...Process gene gpld1 (66/99)...Process gene gpt (67/99)...Process gene il17ra (68/99)...Process gene il33 (69/99)...Process gene iqgap2 (70/99)...Process gene irs1 (71/99)...Process gene itga2b (72/99)...Process gene klf1 (73/99)...Process gene lyplal1 (74/99)...Process gene mlxipl (75/99)...Process gene mpl (76/99)...Process gene msc (77/99)...Process gene nf1 (78/99)...Process gene npr2 (79/99)...Process gene nt5c1a (80/99)...Process gene pappa (81/99)...Process gene pigk (82/99)...Process gene prrc1 (83/99)...Process gene rab35 (84/99)...Process gene rhag (85/99)...Process gene scube3 (86/99)...Process gene shbg (87/99)...Process gene slc22a12 (88/99)...Process gene slc2a9 (89/99)...Process gene stab1 (90/99)...Process gene tet2 (91/99)...Process gene tex22 (92/99)...Process gene tmem150b (93/99)...Process gene tmprss6 (94/99)...Process gene tubb1 (95/99)...Process gene txndc16 (96/99)...Process gene vps52 (97/99)...Process gene zfat (98/99)...Process gene znf12 (99/99)...Error in eval(bysub, x, parent.frame()) : object 'gene' not found Calls: source ... eval -> eval -> apply -> [ -> [.data.table -> eval -> eval 
Traceback: 
 [1] "9: eval(bysub, x, parent.frame())"                                                             
 [2] "8: eval(bysub, x, parent.frame())"                                                             
 [3] "7: `[.data.table`(pVals, , .SD[which.max(pred1_score)], by = c(\"gene\", "                     
 [4] "       \"code\"))"                                                                             
 [5] "6: pVals[, .SD[which.max(pred1_score)], by = c(\"gene\", \"code\")]"                           
 [6] "5: apply(pVals[, .SD[which.max(pred1_score)], by = c(\"gene\", \"code\")], "                   
 [7] "       1, function(row) {"                                                                     
 [8] "           preds = pVals[gene == row[[\"gene\"]] & pred1 == row[[\"pred1\"]]]"                 
 [9] "           preds = preds[q_val >= 0.1, pred2]"                                                 
[10] "           if (length(preds) < 1) "                                                            
[11] "               return(NULL)"                                                                   
[12] "           return(data.table(gene = row[[\"gene\"]], indistingushable_pred = str_split(preds, "
[13] "               fixed(\" (\"), simplify = T)[, 1]))"                                            
[14] "       })"                                                                                     
[15] "4: eval(ei, envir)"                                                                            
[16] "3: eval(ei, envir)"                                                                            
[17] "2: withVisible(eval(ei, envir))"                                                               
[18] "1: source(\"lib/collectBenchmarkResults.R\")"                                                  
